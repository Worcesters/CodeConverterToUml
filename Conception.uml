@startuml


interface ParseInterface{
  + {abstract} parse(self, line: str)
}


class CodeConverterRegistry extends Arbre{
   + initialize_project_with_root()
}


class MethodParser implements ParseInterface{}

class AttributeParser implements ParseInterface{}

class StructureParser implements ParseInterface{}

class Arbre{
   + root: ArbreElement
}

enum Language{
PHP
PYTHON
JAVA
}

class ArbreElement {
   + parent
   + children
   + set_parent()
   + add_child()
   + add_children()
   + get_child(num_child: int): ArbreElement
   + get_children(): ArbreElement[]
   + get_parent(): ArbreElement
}

class CodeStructureDiagram {
    + add_hierarchy(self, hierarchy)
    + add_class(self, class_obj)
    + add_method(self, method)
    + add_interface(self, interface)
    + generate_diagram_code(self)
}

class ParseManager {
    - backup: CodeConverterRegistry
    - parsers: List[Parser]
    + parse_file(self, file_path)
    + parse_files(self, file_paths)
    + parse_folders(self, folder_path)
}

/'MethodParser *-- method
MethodParser *-- params'/


ParseManager o-- ParseInterface 


ParseInterface --> CodeConverterRegistry


Arbre --> ArbreElement 

CodeConverterRegistry --> CodeStructureDiagram
@enduml